{"version":3,"sources":["component.js","App.js","serviceWorker.js","index.js"],"names":["MyComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","buildDictionaryBarData","result","arguments","undefined","second","setState","loading","bar_data","map","entry","id","Kalt","counters","Warm","secondDictionaryBarData","dictionaryBarData","buildTopicBarData","entries_object","topics_object","bars_data","n_entries","keys","entry_name_list","Array","topic_list","topic","push","dataset","join","parseInt","position","topic_prob","sort","secondTopicbarData","paint_topicbars","topicbarData","$","empty","state","topic_datasets","entry_names","topics_data","secondLdaResult","topics","ldaResult","shortNames","ldaTopicBar","clone","toggleClass","attr","find","text","appendTo","w","width","h","xScale","d3","linear","domain","range","axeScale","ordinal","rangePoints","yScale","colorScale","d","svg","append","selectAll","data","enter","format2Perc","xAxis","axis","scale","orient","startAnalysis","config","headers","X-CSRFToken","axios","post","chosenCaseId","start","end","ldaConfig","then","res","comments","dictionaryResult","entries","catch","err","alert","startSecondAnalysis","secondCaseId","concat","secondDictionaryResult","setConfig","fieldName","value","caseIdOptions","numberOfTopics","dirichletAlpha","dirichletEta","numberOfIterations","randomSeed","numberOfDisplayedTopTopics","displayedTopicsTopWords","removeHighFrequentWords","ignoreCapitalization","removeNumbers","stemming","removeStopwords","minimalWordLength","timespan","selectedTab","secondldaResult","_this2","get","project_ids","console","log","_this3","react_default","a","createElement","className","SelectField_default","floatingLabelText","onChange","e","index","style","float","marginLeft","marginRight","caseId","MenuItem_default","primaryText","DatePicker_default","hintText","defaultDate","Date","newValue","moment","format","TextField_default","RaisedButton_default","marginTop","disabled","label","onClick","Tabs","onActive","minHeight","top_words","word","data-toggle","data-placement","title","es6","height","stackOffset","margin","top","right","left","bottom","strokeDasharray","dataKey","y","stroke","fill","stackId","Table","displaySelectAll","adjustForCheckbox","enableSelectAll","displayRowCheckbox","deselectOnClickaway","showRowHover","stripedRows","comment","stop","React","Component","App","MuiThemeProvider_default","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ceb768e.chunk.js","sourcesContent":["import React from 'react'\nimport SelectField from 'material-ui/SelectField'\nimport TextField from 'material-ui/TextField'\nimport MenuItem from 'material-ui/MenuItem'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport axios from \"axios\";\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui/Table';\nimport moment from 'moment'\nimport JSONTree from 'react-json-tree'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as d3 from 'd3'\nimport $ from 'jquery'\nimport {Tabs, Tab} from 'material-ui/Tabs'\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\n} from 'recharts';\n\nclass MyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            caseIdOptions: [],\n            chosenCaseId: null,\n            secondCaseId: null,\n            start: \"2016-01-01\",\n            end: \"2016-08-15\",\n            ldaConfig: {\n                numberOfTopics: 3,\n                dirichletAlpha: 0.1,\n                dirichletEta: 0.01,\n                numberOfIterations: 1500,\n                randomSeed: 1,\n                numberOfDisplayedTopTopics: 3,\n                displayedTopicsTopWords: 8,\n                removeHighFrequentWords: 0.6,\n                ignoreCapitalization: false,\n                removeNumbers: true,\n                stemming: false,\n                removeStopwords: false,\n                minimalWordLength: 2,\n                timespan: 14,\n                selectedTab: 'lda'\n            },\n            comments: [],\n            ldaResult: null,\n            secondldaResult: null,\n            dictionaryResult: null,\n            secondDictionaryResult: null,\n            loading: false,\n            topicbarData: {},\n            secondTopicbarData: {},\n            dictionaryBarData: {},\n            secondDictionaryBarData: {},\n            second: false\n        };\n    }\n\n    componentDidMount(){\n        axios.get('distinct-project-ids/')\n            .then(res => this.setState({caseIdOptions: res.data.project_ids}, () => {\n                this.setState({chosenCaseId: 3, secondCaseId: 7})\n            }))\n            .catch(err => console.log(err));\n    }\n\n    getCookie = (name) => {\n        var cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    buildDictionaryBarData = (result=undefined, second=false) => {\n        this.setState({loading: true})\n\n        let bar_data = result.map((entry) => {\n            return {name: entry.id, Kalt: entry.counters.Kalt, Warm: entry.counters.Warm}\n        })\n        if(second){\n            this.setState({secondDictionaryBarData: bar_data, loading: false})\n        }else{\n            this.setState({dictionaryBarData: bar_data, loading: false})\n        }\n    }\n\n    buildTopicBarData = (entries_object, topics_object, second=false) => {\n        this.setState({loading: true})\n        var bars_data = {};\n        bars_data['topic-datasets'] = {};\n\n        var n_entries = Object.keys(entries_object).length;\n        var entry_name_list = new Array(n_entries);\n        for (var entry in entries_object){\n            entry_name_list[entries_object[entry]['position']] = entry;\n        }\n        bars_data['entry-names'] = entry_name_list;\n\n        var topic_list = [];\n        for (var topic in topics_object){\n            topic_list.push(topic);\n\n            var dataset = new Array(n_entries+1).join('0').split('').map(parseInt);\n            for (var position in entry_name_list){\n                var topic_prob = entries_object[entry_name_list[position]]['topic_probabilities'][topic];\n                dataset[position] = topic_prob;\n            }\n            bars_data['topic-datasets'][topic] = dataset;\n        }\n        topic_list.sort();\n        bars_data['topic-list'] = topic_list;\n        if(second){\n            this.setState({secondTopicbarData: bars_data, loading: false}, () => {this.paint_topicbars(true); this.paint_topicbars();})\n        }else{\n            this.setState({topicbarData: bars_data, loading: false}, () => {this.paint_topicbars()})\n        }\n    }\n\n    paint_topicbars = (second=false) => {\n        if(second){\n            $('#lda-second-topic-bars').empty();\n        }else{\n            $('#lda-topic-bars').empty();\n        }\n\n        var bar_data = second ? this.state.secondTopicbarData : this.state.topicbarData\n        var topic_list = bar_data['topic-list'];\n        var topic_datasets = bar_data['topic-datasets'];\n        var entry_names = bar_data['entry-names'];\n        var topics_data = second ? this.state.secondLdaResult.topics : this.state.ldaResult.topics;\n        var top_words_key = 'top_words';\n\n\n        var shortNames = entry_names\n        shortNames.push('undefined'); //fixes scale issue offset of one\n\n        for (var i in topic_list){\n            var topic = topic_list[i];\n            if(second){\n                var ldaTopicBar = $('.lda-second-topic-bar-template').clone();\n                ldaTopicBar.toggleClass('lda-second-topic-bar-template lda-second-topic-bar template');\n                ldaTopicBar.attr(\"id\", \"second\" + topic +\"_entries_distri\");\n                ldaTopicBar.find('.lda-second-topic-bar-name').text(topic);\n                ldaTopicBar.find('.lda-second-topic-bar-name').attr('title', topics_data[topic][top_words_key].join());\n                ldaTopicBar.appendTo('#lda-second-topic-bars');\n            }else{\n                var ldaTopicBar = $('.lda-topic-bar-template').clone();\n                ldaTopicBar.toggleClass('lda-topic-bar-template lda-topic-bar template');\n                ldaTopicBar.attr(\"id\", topic +\"_entries_distri\");\n                ldaTopicBar.find('.lda-topic-bar-name').text(topic);\n                ldaTopicBar.find('.lda-topic-bar-name').attr('title', topics_data[topic][top_words_key].join());\n                ldaTopicBar.appendTo('#lda-topic-bars');\n            }\n\n            var w = ldaTopicBar.width();\n            var h = 200;\n            var barPadding = 1;\n            var barHeightPadding = 50;\n\n            var xScale = d3.scale.linear()\n                .domain([0, topic_datasets[topic].length])\n                .range([0,w]);\n\n            var axeScale = d3.scale.ordinal()\n                .domain(shortNames)\n                .rangePoints([0, w]);\n\n            var yScale = d3.scale.linear()\n                .domain([0, 1])\n                .range([0, h-barHeightPadding]);\n\n            var colorScale = d3.scale.linear()\n                .domain([0, d3.max(topic_datasets[topic], function(d){\n                    return d;\n                })])\n                .range([0, 200]);\n\n            //Create SVG element\n            var svg = d3.select(\"#\" + ldaTopicBar.attr(\"id\"))\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n            //Append rectangles\n            svg.selectAll(\"rect\")\n                .data(topic_datasets[topic])\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\", function(d, i) {\n                    return xScale(i);\n                })\n                .attr(\"y\", function(d) {\n                    return h-barHeightPadding - yScale(d);  //Height minus data value\n                })\n                .attr(\"width\", w / topic_datasets[topic].length - barPadding)\n                .attr(\"height\", function(d) {\n                    return yScale(d);  //Just the data value\n                }).attr(\"fill\", function(d) {\n                return \"rgb(0, \" + parseInt(colorScale(d)) + \", 0)\";\n            });\n\n            //format to percent\n            var format2Perc = d3.format(\".1%\");\n\n            //percentage text\n            svg.selectAll(\"text\")\n                .data(topic_datasets[topic])\n                .enter()\n                .append(\"text\").text(function(d) {\n                if (d>0.15) return format2Perc(d);\n                else return '';\n            })\n                .attr(\"x\", function(d, i) {\n                    return i * (w / topic_datasets[topic].length) + (w / topic_datasets[topic].length - barPadding) / 2;\n                })\n                .attr(\"y\", function(d) {\n                    return h - barHeightPadding - yScale(d) + 10;\n                })\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", \"10px\")\n                .attr(\"fill\", \"white\")\n                .attr(\"text-anchor\", \"middle\");\n\n            var xAxis = d3.svg.axis()\n                .scale(axeScale)\n                .orient(\"bottom\")\n\n            svg.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"transform\", \"translate(\"+(w / topic_datasets[topic].length - barPadding) / 2+\",\" + (h - barHeightPadding+2) + \")\")\n                .call(xAxis);\n\n        }\n    }\n\n    startAnalysis = () => {\n        this.setState({loading: true})\n        let config = {\n            headers: {\n                \"X-CSRFToken\": this.getCookie('csrftoken'),\n            }\n        }\n        axios.post('start-analysis/', {\n            chosenCaseId: this.state.chosenCaseId,\n            start: this.state.start,\n            end: this.state.end,\n            config: this.state.ldaConfig\n        }, config)\n            .then(res => this.setState({\n                comments: res.data['hours'],\n                ldaResult: res.data['lda_result'],\n                dictionaryResult: res.data['dictionary_result'],\n                loading: false\n            }, () => {\n                this.buildTopicBarData(this.state.ldaResult.entries, this.state.ldaResult.topics)\n                this.buildDictionaryBarData(this.state.dictionaryResult)\n            }))\n            .catch(err => {this.setState({loading: false}); alert(err)});\n    }\n\n    startSecondAnalysis = () => {\n        this.setState({loading: true})\n        let config = {\n            headers: {\n                \"X-CSRFToken\": this.getCookie('csrftoken'),\n            }\n        }\n        axios.post('start-analysis/', {\n            chosenCaseId: this.state.secondCaseId,\n            start: this.state.start,\n            end: this.state.end,\n            config: this.state.ldaConfig\n        }, config)\n            .then(res => this.setState({\n                comments: this.state.comments.concat(res.data['hours']),\n                second: true,\n                secondLdaResult: res.data['lda_result'],\n                secondDictionaryResult: res.data['dictionary_result'],\n                loading: false\n            }, () => {\n                this.buildTopicBarData(this.state.secondLdaResult.entries, this.state.secondLdaResult.topics, true)\n                this.buildDictionaryBarData(this.state.secondDictionaryResult, true)\n            }))\n            .catch(err => {this.setState({loading: false}); alert(err)});\n    }\n\n    setConfig = (fieldName, value) => {\n        let ldaConfig = this.state.ldaConfig\n        ldaConfig[fieldName] = value\n        this.setState({ldaConfig: ldaConfig})\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <SelectField\n                            floatingLabelText={\"Fall-ID\"}\n                            onChange={(e, index, value) => {\n                                this.setState({chosenCaseId: value})\n                            }}\n                            value={this.state.chosenCaseId}\n                            style={{float: 'left', marginLeft: '20px', marginRight: '20px'}}\n                        >\n                            {this.state.caseIdOptions.map((caseId) => {\n                                return (<MenuItem primaryText={caseId} value={caseId}/>)\n                            })}\n                        </SelectField>\n                        <SelectField\n                            floatingLabelText={\"Vergleichsfall\"}\n                            onChange={(e, index, value) => {\n                                this.setState({secondCaseId: value})\n                            }}\n                            value={this.state.secondCaseId}\n                            style={{float: 'left', marginLeft: '20px', marginRight: '20px'}}\n                        >\n                            {this.state.caseIdOptions.map((caseId) => {\n                                return (<MenuItem primaryText={caseId} value={caseId}/>)\n                            })}\n                        </SelectField>\n                        <DatePicker\n                            hintText={\"Startdatum\"}\n                            defaultDate={new Date(\"01-01-2016\")}\n                            onChange={(e, newValue) => {\n                                this.setState({start: moment(newValue).format(\"YYYY-MM-DD\")})\n                            }}\n                        />\n                        <DatePicker\n                            hintText={\"Enddatum\"}\n                            defaultDate={new Date(\"08-15-2016\")}\n                            onChange={(e, newValue) => {\n                                this.setState({end: moment(newValue).format(\"YYYY-MM-DD\")})\n                            }}\n                        />\n                        <TextField floatingLabelText={\"Anzahl der zusammenzufassenden Tage\"} onChange={(e, newValue) => {\n                            this.setConfig('timespan', newValue)\n                        }} value={this.state.ldaConfig.timespan}/>\n\n                        <RaisedButton style={{marginTop: '20px', width: '100%'}} disabled={this.state.loading}\n                                      label={this.state.loading ? 'Warte auf Antwort...' : \"Analyse starten\"}\n                                      onClick={() => {\n                                          this.startAnalysis()\n                                      }}/>\n                        <RaisedButton style={{marginTop: '20px', width: '100%'}} disabled={this.state.loading}\n                                      label={this.state.loading ? 'Warte auf Antwort...' : \"Vergleichsfall analysieren\"}\n                                      onClick={() => {\n                                          this.startSecondAnalysis()\n                                      }}/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <TextField floatingLabelText={\"Anzahl der Themen\"} onChange={(e, newValue) => {\n                            this.setConfig('numberOfTopics', newValue)\n                        }} value={this.state.ldaConfig.numberOfTopics}/>\n                        <TextField floatingLabelText={\"Dirichlet Alpha\"} onChange={(e, newValue) => {\n                            this.setConfig('dirichletAlpha', newValue)\n                        }} value={this.state.ldaConfig.dirichletAlpha}/>\n                        <TextField floatingLabelText={\"Dirichlet Eta\"} onChange={(e, newValue) => {\n                            this.setConfig('dirichletEta', newValue)\n                        }} value={this.state.ldaConfig.dirichletEta}/>\n                        <TextField floatingLabelText={\"Anzahl der Iterationen\"} onChange={(e, newValue) => {\n                            this.setConfig('numberOfIterations', newValue)\n                        }} value={this.state.ldaConfig.numberOfIterations}/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <TextField floatingLabelText={\"Anzahl der dargestellten Top-Themen\"}\n                                   onChange={(e, newValue) => {\n                                       this.setConfig('numberOfDisplayedTopTopics', newValue)\n                                   }} value={this.state.ldaConfig.numberOfDisplayedTopTopics}/>\n                        <TextField floatingLabelText={\"Anzahl der dargestellten Top-Wörter\"}\n                                   onChange={(e, newValue) => {\n                                       this.setConfig('displayedTopicsTopWords', newValue)\n                                   }} value={this.state.ldaConfig.displayedTopicsTopWords}/>\n                        <SelectField floatingLabelText={\"Stammwortreduktion\"} onChange={(e, index, newValue) => {\n                            this.setConfig('stemming', newValue)\n                        }} value={this.state.ldaConfig.stemming}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                        <SelectField floatingLabelText={\"Stoppwortreduktion\"} onChange={(e, index, newValue) => {\n                            this.setConfig('removeStopwords', newValue)\n                        }} value={this.state.ldaConfig.removeStopwords}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <TextField floatingLabelText={\"Frequenz der zu entfernenden hoch-frequenten Wörter\"}\n                                   onChange={(e, newValue) => {\n                                       this.setConfig('removeHighFrequentWords', newValue)\n                                   }} value={this.state.ldaConfig.removeHighFrequentWords}/>\n                        <SelectField floatingLabelText={\"Groß-Kleinschreibung ignorieren\"}\n                                     onChange={(e, index, newValue) => {\n                                         this.setConfig('ignoreCapitalization', newValue)\n                                     }} value={this.state.ldaConfig.ignoreCapitalization}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                        <SelectField floatingLabelText={\"Zahlen entfernen\"} onChange={(e, index, newValue) => {\n                            this.setConfig('removeNumbers', newValue)\n                        }} value={this.state.ldaConfig.removeNumbers}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                        <TextField floatingLabelText={\"Minimale Wortlänge\"} onChange={(e, newValue) => {\n                            this.setConfig('minimalWordLength', newValue)\n                        }} value={this.state.ldaConfig.minimalWordLength}/>\n                    </div>\n                </div>\n                <hr/>\n                <Tabs onChange={(value) => {this.setState({selectedTab: value})}}>\n                    <Tab label={\"LDA\"} value={\"lda\"} onActive={() => {this.setState({selectedTab: 'lda'})}}>\n                        {!this.state.second ?\n                            <div className={\"col-md-12\"}>\n                                <div>\n                                    {this.state.ldaResult && this.state.ldaResult.topics ? Object.keys(this.state.ldaResult.topics).map((topic) => {\n                                        return (\n                                            <div>\n                                                {topic}:\n                                                <ul>\n                                                    {this.state.ldaResult.topics[topic].top_words.map((word) => {\n                                                        return(`${word}, `)\n                                                    })}\n                                                </ul>\n                                            </div>\n                                        )\n                                    }) : <div/>}\n                                </div>\n\n                                <div>\n                                    <div id=\"lda-topic-bars\" className=\"col-xs-12 empty_on_reset\">\n\n                                    </div>\n                                    <div className=\"lda-topic-bar-template col-xs-12 template panel panel-default\">\n                                        <strong><span className=\"lda-topic-bar-name col-xs-12\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"></span></strong>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            :\n\n                            <div className={\"row\"}>\n                                <div className={\"col-md-6\"}>\n                                    <div style={{minHeight: '350px'}}>\n                                        {this.state.ldaResult && this.state.ldaResult.topics ? Object.keys(this.state.ldaResult.topics).map((topic) => {\n                                            return (\n                                                <div>\n                                                    {topic}:\n                                                    <ul>\n                                                        {this.state.ldaResult.topics[topic].top_words.map((word) => {\n                                                            return(`${word}, `)\n                                                        })}\n                                                    </ul>\n                                                </div>\n                                            )\n                                        }) : <div/>}\n                                    </div>\n\n                                    <div>\n                                        <div id=\"lda-topic-bars\" className=\"col-xs-12 empty_on_reset\">\n\n                                        </div>\n                                        <div className=\"lda-topic-bar-template col-xs-12 template panel panel-default\">\n                                            <strong><span className=\"lda-topic-bar-name col-xs-12\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"></span></strong>\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr/>\n                                <div className={\"col-md-6\"}>\n                                    <div style={{minHeight: '350px'}}>\n                                        {this.state.secondLdaResult && this.state.secondLdaResult.topics ? Object.keys(this.state.secondLdaResult.topics).map((topic) => {\n                                            return (\n                                                <div>\n                                                    {topic}:\n                                                    <ul>\n                                                        {this.state.secondLdaResult.topics[topic].top_words.map((word) => {\n                                                            return(`${word}, `)\n                                                        })}\n                                                    </ul>\n                                                </div>\n                                            )\n                                        }) : <div/>}\n                                    </div>\n                                    <div id=\"lda-second-topic-bars\" className=\"col-xs-12 empty_on_reset\">\n                                    </div>\n                                    <div className=\"lda-second-topic-bar-template col-xs-12 template panel panel-default\">\n                                        <strong><span className=\"lda-second-topic-bar-name col-xs-12\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"></span></strong>\n                                    </div>\n                                </div>\n                                <hr/>\n                            </div>\n\n\n                        }\n                    </Tab>\n                    <Tab label={\"Wörterbuch\"} value={\"dictionary\"} onActive={() => {this.setState({selectedTab: 'dictionary'})}}>\n                        {this.state.second ?\n                            <div className={\"row\"}>\n                                <div className={\"col-md-6\"}>\n                                    {Object.keys(this.state.dictionaryBarData).length ?\n                                        <BarChart\n                                            width={600}\n                                            height={400}\n                                            data={this.state.dictionaryBarData}\n                                            stackOffset=\"sign\"\n                                            margin={{\n                                                top: 5, right: 30, left: 20, bottom: 5,\n                                            }}\n                                        >\n                                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                                            <XAxis dataKey=\"name\"/>\n                                            <YAxis/>\n                                            <Tooltip/>\n                                            <Legend/>\n                                            <ReferenceLine y={0} stroke=\"#000\"/>\n                                            <Bar dataKey=\"Warm\" fill=\"#F2314B\" stackId=\"stack\"/>\n                                            <Bar dataKey=\"Kalt\" fill=\"#0F5B94\" stackId=\"stack\"/>\n                                        </BarChart>\n                                        : <div/>}\n                                </div>\n                                <div className={\"col-md-6\"}>\n                                    {Object.keys(this.state.secondDictionaryBarData).length ?\n                                        <BarChart\n                                            width={600}\n                                            height={400}\n                                            data={this.state.secondDictionaryBarData}\n                                            stackOffset=\"sign\"\n                                            margin={{\n                                                top: 5, right: 30, left: 20, bottom: 5,\n                                            }}\n                                        >\n                                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                                            <XAxis dataKey=\"name\"/>\n                                            <YAxis/>\n                                            <Tooltip/>\n                                            <Legend/>\n                                            <ReferenceLine y={0} stroke=\"#000\"/>\n                                            <Bar dataKey=\"Warm\" fill=\"#F2314B\" stackId=\"stack\"/>\n                                            <Bar dataKey=\"Kalt\" fill=\"#0F5B94\" stackId=\"stack\"/>\n                                        </BarChart>\n                                        : <div/>}\n                                </div>\n                            </div>\n                            : <div>\n                            {Object.keys(this.state.dictionaryBarData).length ?\n                                <div className={\"center\"}>\n                                    <BarChart\n                                        width={600}\n                                        height={400}\n                                        data={this.state.dictionaryBarData}\n                                        stackOffset=\"sign\"\n                                        margin={{\n                                            top: 5, right: 30, left: 20, bottom: 5,\n                                        }}\n                                    >\n                                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                                        <XAxis dataKey=\"name\"/>\n                                        <YAxis/>\n                                        <Tooltip/>\n                                        <Legend/>\n                                        <ReferenceLine y={0} stroke=\"#000\"/>\n                                        <Bar dataKey=\"Warm\" fill=\"#F2314B\" stackId=\"stack\"/>\n                                        <Bar dataKey=\"Kalt\" fill=\"#0F5B94\" stackId=\"stack\"/>\n                                    </BarChart>\n                                </div>\n                                : <div/>}\n                        </div>}\n\n                        <hr/>\n                    </Tab>\n                </Tabs>\n                <div className=\"row col-xs-6\">\n                    <Table>\n                        <TableHeader\n                            displaySelectAll={false}\n                            adjustForCheckbox={false}\n                            enableSelectAll={false}\n                        >\n                            <TableRow>\n                                <TableHeaderColumn style={{width: '10%'}}>ID</TableHeaderColumn>\n                                <TableHeaderColumn style={{width: '15%'}}>Start</TableHeaderColumn>\n                                <TableHeaderColumn style={{width: '15%'}}>Ende</TableHeaderColumn>\n                                <TableHeaderColumn style={{width: '60%'}}>Eintrag</TableHeaderColumn>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody\n                            displayRowCheckbox={false}\n                            deselectOnClickaway={false}\n                            showRowHover={false}\n                            stripedRows={false}\n                        >\n                            {this.state.comments.map((comment) => {\n                                return(<TableRow>\n                                    <TableRowColumn style={{width: '10%'}}>{comment.id}</TableRowColumn>\n                                    <TableRowColumn style={{width: '15%'}}>{moment(comment.start).format('DD.MM.YYYY, LT')}</TableRowColumn>\n                                    <TableRowColumn style={{width: '15%'}}>{moment(comment.stop).format('DD.MM.YYYY, LT')}</TableRowColumn>\n                                    <TableRowColumn style={{width: '60%'}}>{<span onClick={() => {alert(comment.comment)}}>{comment.comment}</span>}</TableRowColumn>\n                                </TableRow>)\n                            })}\n                        </TableBody>\n                    </Table>\n                </div>\n                <hr/>\n                {/*<JSONTree data={this.state.ldaResult}/>*/}\n                <hr/>\n            </div>\n        );\n    }\n}\n\nexport default MyComponent","import React from 'react';\nimport './App.css';\nimport MyComponent from './component'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider>\n      <header className=\"App-header\">\n        Textbasierte Prozessanalyse\n      </header>\n      <MyComponent />\n        </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}