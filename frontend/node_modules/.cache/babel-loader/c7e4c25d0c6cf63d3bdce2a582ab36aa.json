{"ast":null,"code":"var _jsxFileName = \"/Users/kevinklaus/projects/masterarbeit/frontend/src/component.js\";\nimport React from 'react';\nimport SelectField from 'material-ui/SelectField';\nimport TextField from 'material-ui/TextField';\nimport MenuItem from 'material-ui/MenuItem';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport DatePicker from 'material-ui/DatePicker';\nimport axios from \"axios\";\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui/Table';\nimport moment from 'moment';\nimport JSONTree from 'react-json-tree';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as d3 from 'd3';\nimport $ from 'jquery';\nimport { Tabs, Tab } from 'material-ui/Tabs';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCookie = name => {\n      var cookieValue = null;\n\n      if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n\n        for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n          if (cookie.substring(0, name.length + 1) === name + '=') {\n            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n            break;\n          }\n        }\n      }\n\n      return cookieValue;\n    };\n\n    this.buildDictionaryBarData = (result = undefined, second = false) => {\n      this.setState({\n        loading: true\n      });\n      let bar_data = result.map(entry => {\n        return {\n          name: entry.id,\n          Kalt: entry.counters.Kalt,\n          Warm: entry.counters.Warm\n        };\n      });\n\n      if (second) {\n        this.setState({\n          secondDictionaryBarData: bar_data,\n          loading: false\n        });\n      } else {\n        this.setState({\n          dictionaryBarData: bar_data,\n          loading: false\n        });\n      }\n    };\n\n    this.buildTopicBarData = (entries_object, topics_object, second = false) => {\n      this.setState({\n        loading: true\n      });\n      var bars_data = {};\n      bars_data['topic-datasets'] = {};\n      var n_entries = Object.keys(entries_object).length;\n      var entry_name_list = new Array(n_entries);\n\n      for (var entry in entries_object) {\n        entry_name_list[entries_object[entry]['position']] = entry;\n      }\n\n      bars_data['entry-names'] = entry_name_list;\n      var topic_list = [];\n\n      for (var topic in topics_object) {\n        topic_list.push(topic);\n        var dataset = new Array(n_entries + 1).join('0').split('').map(parseInt);\n\n        for (var position in entry_name_list) {\n          var topic_prob = entries_object[entry_name_list[position]]['topic_probabilities'][topic];\n          dataset[position] = topic_prob;\n        }\n\n        bars_data['topic-datasets'][topic] = dataset;\n      }\n\n      topic_list.sort();\n      bars_data['topic-list'] = topic_list;\n\n      if (second) {\n        this.setState({\n          secondTopicbarData: bars_data,\n          loading: false\n        }, () => {\n          this.paint_topicbars(true);\n        });\n      } else {\n        this.setState({\n          topicbarData: bars_data,\n          loading: false\n        }, () => {\n          this.paint_topicbars();\n        });\n      }\n    };\n\n    this.paint_topicbars = (second = false) => {\n      console.error(this.state);\n\n      if (second) {\n        $('#lda-second-topic-bars').empty();\n      } else {\n        $('#lda-topic-bars').empty();\n      }\n\n      var bar_data = second ? this.state.secondTopicbarData : this.state.topicbarData;\n      var topic_list = bar_data['topic-list'];\n      var topic_datasets = bar_data['topic-datasets'];\n      var entry_names = bar_data['entry-names'];\n      var topics_data = second ? this.state.secondLdaResult.topics : this.state.ldaResult.topics;\n      var top_words_key = 'top_words';\n      var shortNames = entry_names;\n      shortNames.push('undefined'); //fixes scale issue offset of one\n\n      for (var i in topic_list) {\n        var topic = topic_list[i];\n\n        if (second) {\n          var ldaTopicBar = $('.lda-second-topic-bar-template').clone();\n          ldaTopicBar.toggleClass('lda-second-topic-bar-template lda-second-topic-bar template');\n          ldaTopicBar.attr(\"id\", \"second\" + topic + \"_entries_distri\");\n          ldaTopicBar.find('.lda-second-topic-bar-name').text(topic);\n          ldaTopicBar.find('.lda-second-topic-bar-name').attr('title', topics_data[topic][top_words_key].join());\n          ldaTopicBar.appendTo('#lda-second-topic-bars');\n        } else {\n          var ldaTopicBar = $('.lda-topic-bar-template').clone();\n          ldaTopicBar.toggleClass('lda-topic-bar-template lda-topic-bar template');\n          ldaTopicBar.attr(\"id\", topic + \"_entries_distri\");\n          ldaTopicBar.find('.lda-topic-bar-name').text(topic);\n          ldaTopicBar.find('.lda-topic-bar-name').attr('title', topics_data[topic][top_words_key].join());\n          ldaTopicBar.appendTo('#lda-topic-bars');\n        }\n\n        var w = 600;\n        var h = 200;\n        var barPadding = 1;\n        var barHeightPadding = 50;\n        var xScale = d3.scale.linear().domain([0, topic_datasets[topic].length]).range([0, w]);\n        var axeScale = d3.scale.ordinal().domain(shortNames).rangePoints([0, w]);\n        var yScale = d3.scale.linear().domain([0, 1]).range([0, h - barHeightPadding]);\n        var colorScale = d3.scale.linear().domain([0, d3.max(topic_datasets[topic], function (d) {\n          return d;\n        })]).range([0, 200]); //Create SVG element\n\n        var svg = d3.select(second ? \"#\" + \"second\" + ldaTopicBar.attr(\"id\") : \"#\" + ldaTopicBar.attr(\"id\")).append(\"svg\").attr(\"width\", w).attr(\"height\", h); //Append rectangles\n\n        svg.selectAll(\"rect\").data(topic_datasets[topic]).enter().append(\"rect\").attr(\"x\", function (d, i) {\n          return xScale(i);\n        }).attr(\"y\", function (d) {\n          return h - barHeightPadding - yScale(d); //Height minus data value\n        }).attr(\"width\", w / topic_datasets[topic].length - barPadding).attr(\"height\", function (d) {\n          return yScale(d); //Just the data value\n        }).attr(\"fill\", function (d) {\n          return \"rgb(0, \" + parseInt(colorScale(d)) + \", 0)\";\n        }); //format to percent\n\n        var format2Perc = d3.format(\".1%\"); //percentage text\n\n        svg.selectAll(\"text\").data(topic_datasets[topic]).enter().append(\"text\").text(function (d) {\n          if (d > 0.15) return format2Perc(d);else return '';\n        }).attr(\"x\", function (d, i) {\n          return i * (w / topic_datasets[topic].length) + (w / topic_datasets[topic].length - barPadding) / 2;\n        }).attr(\"y\", function (d) {\n          return h - barHeightPadding - yScale(d) + 10;\n        }).attr(\"font-family\", \"sans-serif\").attr(\"font-size\", \"10px\").attr(\"fill\", \"white\").attr(\"text-anchor\", \"middle\");\n        var xAxis = d3.svg.axis().scale(axeScale).orient(\"bottom\");\n        svg.append(\"g\").attr(\"class\", \"axis\").attr(\"transform\", \"translate(\" + (w / topic_datasets[topic].length - barPadding) / 2 + \",\" + (h - barHeightPadding + 2) + \")\").call(xAxis);\n      }\n    };\n\n    this.startAnalysis = () => {\n      this.setState({\n        loading: true\n      });\n      let config = {\n        headers: {\n          \"X-CSRFToken\": this.getCookie('csrftoken')\n        }\n      };\n      axios.post('start-analysis/', {\n        chosenCaseId: this.state.chosenCaseId,\n        start: this.state.start,\n        end: this.state.end,\n        config: this.state.ldaConfig\n      }, config).then(res => this.setState({\n        comments: res.data['hours'],\n        ldaResult: res.data['lda_result'],\n        dictionaryResult: res.data['dictionary_result'],\n        loading: false\n      }, () => {\n        this.buildTopicBarData(this.state.ldaResult.entries, this.state.ldaResult.topics);\n        this.buildDictionaryBarData(this.state.dictionaryResult);\n      })).catch(err => {\n        this.setState({\n          loading: false\n        });\n        alert(err);\n      });\n    };\n\n    this.startSecondAnalysis = () => {\n      this.setState({\n        loading: true\n      });\n      let config = {\n        headers: {\n          \"X-CSRFToken\": this.getCookie('csrftoken')\n        }\n      };\n      axios.post('start-analysis/', {\n        chosenCaseId: this.state.secondCaseId,\n        start: this.state.start,\n        end: this.state.end,\n        config: this.state.ldaConfig\n      }, config).then(res => this.setState({\n        comments: this.state.comments.concat(res.data['hours']),\n        second: true,\n        secondLdaResult: res.data['lda_result'],\n        secondDictionaryResult: res.data['dictionary_result'],\n        loading: false\n      }, () => {\n        this.buildTopicBarData(this.state.secondLdaResult.entries, this.state.secondLdaResult.topics, true);\n        this.buildDictionaryBarData(this.state.secondDictionaryResult, true);\n      })).catch(err => {\n        this.setState({\n          loading: false\n        });\n        alert(err);\n      });\n    };\n\n    this.setConfig = (fieldName, value) => {\n      let ldaConfig = this.state.ldaConfig;\n      ldaConfig[fieldName] = value;\n      this.setState({\n        ldaConfig: ldaConfig\n      });\n    };\n\n    this.state = {\n      caseIdOptions: [],\n      chosenCaseId: null,\n      secondCaseId: null,\n      start: \"2016-01-01\",\n      end: \"2016-08-15\",\n      ldaConfig: {\n        numberOfTopics: 3,\n        dirichletAlpha: 0.1,\n        dirichletEta: 0.01,\n        numberOfIterations: 1500,\n        randomSeed: 1,\n        numberOfDisplayedTopTopics: 3,\n        displayedTopicsTopWords: 8,\n        removeHighFrequentWords: 0.6,\n        ignoreCapitalization: false,\n        removeNumbers: true,\n        stemming: false,\n        removeStopwords: false,\n        minimalWordLength: 2,\n        timespan: 14,\n        selectedTab: 'lda'\n      },\n      comments: [],\n      ldaResult: null,\n      secondldaResult: null,\n      dictionaryResult: null,\n      secondDictionaryResult: null,\n      loading: false,\n      topicbarData: {},\n      secondTopicbarData: {},\n      dictionaryBarData: {},\n      secondDictionaryBarData: {},\n      second: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('distinct-project-ids/').then(res => this.setState({\n      caseIdOptions: res.data.project_ids\n    }, () => {\n      this.setState({\n        chosenCaseId: 3,\n        secondCaseId: 7\n      });\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(SelectField, {\n      floatingLabelText: \"Fall-ID\",\n      onChange: (e, index, value) => {\n        this.setState({\n          chosenCaseId: value\n        });\n      },\n      value: this.state.chosenCaseId,\n      style: {\n        float: 'left',\n        marginLeft: '20px',\n        marginRight: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.state.caseIdOptions.map(caseId => {\n      return React.createElement(MenuItem, {\n        primaryText: caseId,\n        value: caseId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      });\n    })), React.createElement(SelectField, {\n      floatingLabelText: \"Vergleichsfall\",\n      onChange: (e, index, value) => {\n        this.setState({\n          secondCaseId: value\n        });\n      },\n      value: this.state.secondCaseId,\n      style: {\n        float: 'left',\n        marginLeft: '20px',\n        marginRight: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, this.state.caseIdOptions.map(caseId => {\n      return React.createElement(MenuItem, {\n        primaryText: caseId,\n        value: caseId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      });\n    })), React.createElement(DatePicker, {\n      hintText: \"Startdatum\",\n      defaultDate: new Date(\"01-01-2016\"),\n      onChange: (e, newValue) => {\n        this.setState({\n          start: moment(newValue).format(\"YYYY-MM-DD\")\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      hintText: \"Enddatum\",\n      defaultDate: new Date(\"08-15-2016\"),\n      onChange: (e, newValue) => {\n        this.setState({\n          end: moment(newValue).format(\"YYYY-MM-DD\")\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      floatingLabelText: \"Anzahl der zusammenzufassenden Tage\",\n      onChange: (e, newValue) => {\n        this.setConfig('timespan', newValue);\n      },\n      value: this.state.ldaConfig.timespan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      style: {\n        marginTop: '20px',\n        width: '100%'\n      },\n      disabled: this.state.loading,\n      label: this.state.loading ? 'Warte auf Antwort...' : \"Analyse starten\",\n      onClick: () => {\n        this.startAnalysis();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(RaisedButton, {\n      style: {\n        marginTop: '20px',\n        width: '100%'\n      },\n      disabled: this.state.loading,\n      label: this.state.loading ? 'Warte auf Antwort...' : \"Vergleichsfall analysieren\",\n      onClick: () => {\n        this.startSecondAnalysis();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      floatingLabelText: \"Anzahl der Themen\",\n      onChange: (e, newValue) => {\n        this.setConfig('numberOfTopics', newValue);\n      },\n      value: this.state.ldaConfig.numberOfTopics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      floatingLabelText: \"Dirichlet Alpha\",\n      onChange: (e, newValue) => {\n        this.setConfig('dirichletAlpha', newValue);\n      },\n      value: this.state.ldaConfig.dirichletAlpha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      floatingLabelText: \"Dirichlet Eta\",\n      onChange: (e, newValue) => {\n        this.setConfig('dirichletEta', newValue);\n      },\n      value: this.state.ldaConfig.dirichletEta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      floatingLabelText: \"Anzahl der Iterationen\",\n      onChange: (e, newValue) => {\n        this.setConfig('numberOfIterations', newValue);\n      },\n      value: this.state.ldaConfig.numberOfIterations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      floatingLabelText: \"Anzahl der dargestellten Top-Themen\",\n      onChange: (e, newValue) => {\n        this.setConfig('numberOfDisplayedTopTopics', newValue);\n      },\n      value: this.state.ldaConfig.numberOfDisplayedTopTopics,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      floatingLabelText: \"Anzahl der dargestellten Top-Wörter\",\n      onChange: (e, newValue) => {\n        this.setConfig('displayedTopicsTopWords', newValue);\n      },\n      value: this.state.ldaConfig.displayedTopicsTopWords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(SelectField, {\n      floatingLabelText: \"Stammwortreduktion\",\n      onChange: (e, index, newValue) => {\n        this.setConfig('stemming', newValue);\n      },\n      value: this.state.ldaConfig.stemming,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      primaryText: \"Ja\",\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      primaryText: \"Nein\",\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    })), React.createElement(SelectField, {\n      floatingLabelText: \"Stoppwortreduktion\",\n      onChange: (e, index, newValue) => {\n        this.setConfig('removeStopwords', newValue);\n      },\n      value: this.state.ldaConfig.removeStopwords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      primaryText: \"Ja\",\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      primaryText: \"Nein\",\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      floatingLabelText: \"Frequenz der zu entfernenden hoch-frequenten Wörter\",\n      onChange: (e, newValue) => {\n        this.setConfig('removeHighFrequentWords', newValue);\n      },\n      value: this.state.ldaConfig.removeHighFrequentWords,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }), React.createElement(SelectField, {\n      floatingLabelText: \"Groß-Kleinschreibung ignorieren\",\n      onChange: (e, index, newValue) => {\n        this.setConfig('ignoreCapitalization', newValue);\n      },\n      value: this.state.ldaConfig.ignoreCapitalization,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      primaryText: \"Ja\",\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      primaryText: \"Nein\",\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    })), React.createElement(SelectField, {\n      floatingLabelText: \"Zahlen entfernen\",\n      onChange: (e, index, newValue) => {\n        this.setConfig('removeNumbers', newValue);\n      },\n      value: this.state.ldaConfig.removeNumbers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      primaryText: \"Ja\",\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), React.createElement(MenuItem, {\n      primaryText: \"Nein\",\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      floatingLabelText: \"Minimale Wortlänge\",\n      onChange: (e, newValue) => {\n        this.setConfig('minimalWordLength', newValue);\n      },\n      value: this.state.ldaConfig.minimalWordLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }), React.createElement(Tabs, {\n      onChange: value => {\n        this.setState({\n          selectedTab: value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"LDA\",\n      value: \"lda\",\n      onActive: () => {\n        this.setState({\n          selectedTab: 'lda'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, this.state.ldaResult && this.state.ldaResult.topics ? Object.keys(this.state.ldaResult.topics).map(topic => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, topic, \":\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, this.state.ldaResult.topics[topic].top_words.map(word => {\n        return \"\".concat(word, \", \");\n      })));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"lda-topic-bars\",\n      className: \"col-xs-12 empty_on_reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"lda-topic-bar-template col-xs-12 template panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lda-topic-bar-name col-xs-12\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"lda-second-topic-bars\",\n      className: \"col-xs-12 empty_on_reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"lda-second-topic-bar-template col-xs-12 template panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"lda-second-topic-bar-name col-xs-12\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      label: \"Wörterbuch\",\n      value: \"dictionary\",\n      onActive: () => {\n        this.setState({\n          selectedTab: 'dictionary'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, this.state.second ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, Object.keys(this.state.dictionaryBarData).length ? React.createElement(BarChart, {\n      width: 600,\n      height: 400,\n      data: this.state.dictionaryBarData,\n      stackOffset: \"sign\",\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), React.createElement(ReferenceLine, {\n      y: 0,\n      stroke: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Warm\",\n      fill: \"#8884d8\",\n      stackId: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Kalt\",\n      fill: \"#82ca9d\",\n      stackId: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }), Object.keys(this.state.secondDictionaryBarData).length ? React.createElement(BarChart, {\n      width: 600,\n      height: 400,\n      data: this.state.secondDictionaryBarData,\n      stackOffset: \"sign\",\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }), React.createElement(ReferenceLine, {\n      y: 0,\n      stroke: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Warm\",\n      fill: \"#8884d8\",\n      stackId: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Kalt\",\n      fill: \"#82ca9d\",\n      stackId: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, Object.keys(this.state.dictionaryBarData).length ? React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(BarChart, {\n      width: 600,\n      height: 400,\n      data: this.state.dictionaryBarData,\n      stackOffset: \"sign\",\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }), React.createElement(ReferenceLine, {\n      y: 0,\n      stroke: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Warm\",\n      fill: \"#8884d8\",\n      stackId: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"Kalt\",\n      fill: \"#82ca9d\",\n      stackId: \"stack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row col-xs-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(TableHeader, {\n      displaySelectAll: false,\n      adjustForCheckbox: false,\n      enableSelectAll: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(TableHeaderColumn, {\n      style: {\n        width: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableHeaderColumn, {\n      style: {\n        width: '15%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"Start\"), React.createElement(TableHeaderColumn, {\n      style: {\n        width: '15%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, \"Ende\"), React.createElement(TableHeaderColumn, {\n      style: {\n        width: '60%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, \"Eintrag\"))), React.createElement(TableBody, {\n      displayRowCheckbox: false,\n      deselectOnClickaway: false,\n      showRowHover: false,\n      stripedRows: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, this.state.comments.map(comment => {\n      return React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(TableRowColumn, {\n        style: {\n          width: '10%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, comment.id), React.createElement(TableRowColumn, {\n        style: {\n          width: '15%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, moment(comment.start).format('DD.MM.YYYY, LT')), React.createElement(TableRowColumn, {\n        style: {\n          width: '15%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, moment(comment.stop).format('DD.MM.YYYY, LT')), React.createElement(TableRowColumn, {\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          alert(comment.comment);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, comment.comment)));\n    })))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }), React.createElement(JSONTree, {\n      data: this.state.ldaResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/kevinklaus/projects/masterarbeit/frontend/src/component.js"],"names":["React","SelectField","TextField","MenuItem","RaisedButton","DatePicker","axios","Table","TableBody","TableHeader","TableHeaderColumn","TableRow","TableRowColumn","moment","JSONTree","d3","$","Tabs","Tab","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ReferenceLine","MyComponent","Component","constructor","props","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","buildDictionaryBarData","result","undefined","second","setState","loading","bar_data","map","entry","id","Kalt","counters","Warm","secondDictionaryBarData","dictionaryBarData","buildTopicBarData","entries_object","topics_object","bars_data","n_entries","Object","keys","entry_name_list","Array","topic_list","topic","push","dataset","join","parseInt","position","topic_prob","sort","secondTopicbarData","paint_topicbars","topicbarData","console","error","state","empty","topic_datasets","entry_names","topics_data","secondLdaResult","topics","ldaResult","top_words_key","shortNames","ldaTopicBar","clone","toggleClass","attr","find","text","appendTo","w","h","barPadding","barHeightPadding","xScale","scale","linear","domain","range","axeScale","ordinal","rangePoints","yScale","colorScale","max","d","svg","select","append","selectAll","data","enter","format2Perc","format","xAxis","axis","orient","call","startAnalysis","config","headers","post","chosenCaseId","start","end","ldaConfig","then","res","comments","dictionaryResult","entries","catch","err","alert","startSecondAnalysis","secondCaseId","concat","secondDictionaryResult","setConfig","fieldName","value","caseIdOptions","numberOfTopics","dirichletAlpha","dirichletEta","numberOfIterations","randomSeed","numberOfDisplayedTopTopics","displayedTopicsTopWords","removeHighFrequentWords","ignoreCapitalization","removeNumbers","stemming","removeStopwords","minimalWordLength","timespan","selectedTab","secondldaResult","componentDidMount","get","project_ids","log","render","e","index","float","marginLeft","marginRight","caseId","Date","newValue","marginTop","width","top_words","word","top","right","left","bottom","comment","stop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport SelectField from 'material-ui/SelectField'\nimport TextField from 'material-ui/TextField'\nimport MenuItem from 'material-ui/MenuItem'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport DatePicker from 'material-ui/DatePicker'\nimport axios from \"axios\";\nimport {\n    Table,\n    TableBody,\n    TableHeader,\n    TableHeaderColumn,\n    TableRow,\n    TableRowColumn,\n} from 'material-ui/Table';\nimport moment from 'moment'\nimport JSONTree from 'react-json-tree'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as d3 from 'd3'\nimport $ from 'jquery'\nimport {Tabs, Tab} from 'material-ui/Tabs'\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine,\n} from 'recharts';\n\nclass MyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            caseIdOptions: [],\n            chosenCaseId: null,\n            secondCaseId: null,\n            start: \"2016-01-01\",\n            end: \"2016-08-15\",\n            ldaConfig: {\n                numberOfTopics: 3,\n                dirichletAlpha: 0.1,\n                dirichletEta: 0.01,\n                numberOfIterations: 1500,\n                randomSeed: 1,\n                numberOfDisplayedTopTopics: 3,\n                displayedTopicsTopWords: 8,\n                removeHighFrequentWords: 0.6,\n                ignoreCapitalization: false,\n                removeNumbers: true,\n                stemming: false,\n                removeStopwords: false,\n                minimalWordLength: 2,\n                timespan: 14,\n                selectedTab: 'lda'\n            },\n            comments: [],\n            ldaResult: null,\n            secondldaResult: null,\n            dictionaryResult: null,\n            secondDictionaryResult: null,\n            loading: false,\n            topicbarData: {},\n            secondTopicbarData: {},\n            dictionaryBarData: {},\n            secondDictionaryBarData: {},\n            second: false\n        };\n    }\n\n    componentDidMount(){\n        axios.get('distinct-project-ids/')\n            .then(res => this.setState({caseIdOptions: res.data.project_ids}, () => {\n                this.setState({chosenCaseId: 3, secondCaseId: 7})\n            }))\n            .catch(err => console.log(err));\n    }\n\n    getCookie = (name) => {\n        var cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    buildDictionaryBarData = (result=undefined, second=false) => {\n        this.setState({loading: true})\n\n        let bar_data = result.map((entry) => {\n            return {name: entry.id, Kalt: entry.counters.Kalt, Warm: entry.counters.Warm}\n        })\n        if(second){\n            this.setState({secondDictionaryBarData: bar_data, loading: false})\n        }else{\n            this.setState({dictionaryBarData: bar_data, loading: false})\n        }\n    }\n\n    buildTopicBarData = (entries_object, topics_object, second=false) => {\n        this.setState({loading: true})\n        var bars_data = {};\n        bars_data['topic-datasets'] = {};\n\n        var n_entries = Object.keys(entries_object).length;\n        var entry_name_list = new Array(n_entries);\n        for (var entry in entries_object){\n            entry_name_list[entries_object[entry]['position']] = entry;\n        }\n        bars_data['entry-names'] = entry_name_list;\n\n        var topic_list = [];\n        for (var topic in topics_object){\n            topic_list.push(topic);\n\n            var dataset = new Array(n_entries+1).join('0').split('').map(parseInt);\n            for (var position in entry_name_list){\n                var topic_prob = entries_object[entry_name_list[position]]['topic_probabilities'][topic];\n                dataset[position] = topic_prob;\n            }\n            bars_data['topic-datasets'][topic] = dataset;\n        }\n        topic_list.sort();\n        bars_data['topic-list'] = topic_list;\n        if(second){\n            this.setState({secondTopicbarData: bars_data, loading: false}, () => {this.paint_topicbars(true)})\n        }else{\n            this.setState({topicbarData: bars_data, loading: false}, () => {this.paint_topicbars()})\n        }\n    }\n\n    paint_topicbars = (second=false) => {\n        console.error(this.state)\n        if(second){\n            $('#lda-second-topic-bars').empty();\n        }else{\n            $('#lda-topic-bars').empty();\n        }\n\n        var bar_data = second ? this.state.secondTopicbarData : this.state.topicbarData\n        var topic_list = bar_data['topic-list'];\n        var topic_datasets = bar_data['topic-datasets'];\n        var entry_names = bar_data['entry-names'];\n        var topics_data = second ? this.state.secondLdaResult.topics : this.state.ldaResult.topics;\n        var top_words_key = 'top_words';\n\n\n        var shortNames = entry_names\n        shortNames.push('undefined'); //fixes scale issue offset of one\n\n        for (var i in topic_list){\n            var topic = topic_list[i];\n            if(second){\n                var ldaTopicBar = $('.lda-second-topic-bar-template').clone();\n                ldaTopicBar.toggleClass('lda-second-topic-bar-template lda-second-topic-bar template');\n                ldaTopicBar.attr(\"id\", \"second\" + topic +\"_entries_distri\");\n                ldaTopicBar.find('.lda-second-topic-bar-name').text(topic);\n                ldaTopicBar.find('.lda-second-topic-bar-name').attr('title', topics_data[topic][top_words_key].join());\n                ldaTopicBar.appendTo('#lda-second-topic-bars');\n            }else{\n                var ldaTopicBar = $('.lda-topic-bar-template').clone();\n                ldaTopicBar.toggleClass('lda-topic-bar-template lda-topic-bar template');\n                ldaTopicBar.attr(\"id\", topic +\"_entries_distri\");\n                ldaTopicBar.find('.lda-topic-bar-name').text(topic);\n                ldaTopicBar.find('.lda-topic-bar-name').attr('title', topics_data[topic][top_words_key].join());\n                ldaTopicBar.appendTo('#lda-topic-bars');\n            }\n\n            var w = 600;\n            var h = 200;\n            var barPadding = 1;\n            var barHeightPadding = 50;\n\n            var xScale = d3.scale.linear()\n                .domain([0, topic_datasets[topic].length])\n                .range([0,w]);\n\n            var axeScale = d3.scale.ordinal()\n                .domain(shortNames)\n                .rangePoints([0, w]);\n\n            var yScale = d3.scale.linear()\n                .domain([0, 1])\n                .range([0, h-barHeightPadding]);\n\n            var colorScale = d3.scale.linear()\n                .domain([0, d3.max(topic_datasets[topic], function(d){\n                    return d;\n                })])\n                .range([0, 200]);\n\n            //Create SVG element\n            var svg = d3.select(second ? \"#\" + \"second\" + ldaTopicBar.attr(\"id\") : \"#\" + ldaTopicBar.attr(\"id\"))\n                .append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n            //Append rectangles\n            svg.selectAll(\"rect\")\n                .data(topic_datasets[topic])\n                .enter()\n                .append(\"rect\")\n                .attr(\"x\", function(d, i) {\n                    return xScale(i);\n                })\n                .attr(\"y\", function(d) {\n                    return h-barHeightPadding - yScale(d);  //Height minus data value\n                })\n                .attr(\"width\", w / topic_datasets[topic].length - barPadding)\n                .attr(\"height\", function(d) {\n                    return yScale(d);  //Just the data value\n                }).attr(\"fill\", function(d) {\n                return \"rgb(0, \" + parseInt(colorScale(d)) + \", 0)\";\n            });\n\n            //format to percent\n            var format2Perc = d3.format(\".1%\");\n\n            //percentage text\n            svg.selectAll(\"text\")\n                .data(topic_datasets[topic])\n                .enter()\n                .append(\"text\").text(function(d) {\n                if (d>0.15) return format2Perc(d);\n                else return '';\n            })\n                .attr(\"x\", function(d, i) {\n                    return i * (w / topic_datasets[topic].length) + (w / topic_datasets[topic].length - barPadding) / 2;\n                })\n                .attr(\"y\", function(d) {\n                    return h - barHeightPadding - yScale(d) + 10;\n                })\n                .attr(\"font-family\", \"sans-serif\")\n                .attr(\"font-size\", \"10px\")\n                .attr(\"fill\", \"white\")\n                .attr(\"text-anchor\", \"middle\");\n\n            var xAxis = d3.svg.axis()\n                .scale(axeScale)\n                .orient(\"bottom\")\n\n            svg.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"transform\", \"translate(\"+(w / topic_datasets[topic].length - barPadding) / 2+\",\" + (h - barHeightPadding+2) + \")\")\n                .call(xAxis);\n\n        }\n    }\n\n    startAnalysis = () => {\n        this.setState({loading: true})\n        let config = {\n            headers: {\n                \"X-CSRFToken\": this.getCookie('csrftoken'),\n            }\n        }\n        axios.post('start-analysis/', {\n            chosenCaseId: this.state.chosenCaseId,\n            start: this.state.start,\n            end: this.state.end,\n            config: this.state.ldaConfig\n        }, config)\n            .then(res => this.setState({\n                comments: res.data['hours'],\n                ldaResult: res.data['lda_result'],\n                dictionaryResult: res.data['dictionary_result'],\n                loading: false\n            }, () => {\n                this.buildTopicBarData(this.state.ldaResult.entries, this.state.ldaResult.topics)\n                this.buildDictionaryBarData(this.state.dictionaryResult)\n            }))\n            .catch(err => {this.setState({loading: false}); alert(err)});\n    }\n\n    startSecondAnalysis = () => {\n        this.setState({loading: true})\n        let config = {\n            headers: {\n                \"X-CSRFToken\": this.getCookie('csrftoken'),\n            }\n        }\n        axios.post('start-analysis/', {\n            chosenCaseId: this.state.secondCaseId,\n            start: this.state.start,\n            end: this.state.end,\n            config: this.state.ldaConfig\n        }, config)\n            .then(res => this.setState({\n                comments: this.state.comments.concat(res.data['hours']),\n                second: true,\n                secondLdaResult: res.data['lda_result'],\n                secondDictionaryResult: res.data['dictionary_result'],\n                loading: false\n            }, () => {\n                this.buildTopicBarData(this.state.secondLdaResult.entries, this.state.secondLdaResult.topics, true)\n                this.buildDictionaryBarData(this.state.secondDictionaryResult, true)\n            }))\n            .catch(err => {this.setState({loading: false}); alert(err)});\n    }\n\n    setConfig = (fieldName, value) => {\n        let ldaConfig = this.state.ldaConfig\n        ldaConfig[fieldName] = value\n        this.setState({ldaConfig: ldaConfig})\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <SelectField\n                            floatingLabelText={\"Fall-ID\"}\n                            onChange={(e, index, value) => {\n                                this.setState({chosenCaseId: value})\n                            }}\n                            value={this.state.chosenCaseId}\n                            style={{float: 'left', marginLeft: '20px', marginRight: '20px'}}\n                        >\n                            {this.state.caseIdOptions.map((caseId) => {\n                                return (<MenuItem primaryText={caseId} value={caseId}/>)\n                            })}\n                        </SelectField>\n                        <SelectField\n                            floatingLabelText={\"Vergleichsfall\"}\n                            onChange={(e, index, value) => {\n                                this.setState({secondCaseId: value})\n                            }}\n                            value={this.state.secondCaseId}\n                            style={{float: 'left', marginLeft: '20px', marginRight: '20px'}}\n                        >\n                            {this.state.caseIdOptions.map((caseId) => {\n                                return (<MenuItem primaryText={caseId} value={caseId}/>)\n                            })}\n                        </SelectField>\n                        <DatePicker\n                            hintText={\"Startdatum\"}\n                            defaultDate={new Date(\"01-01-2016\")}\n                            onChange={(e, newValue) => {\n                                this.setState({start: moment(newValue).format(\"YYYY-MM-DD\")})\n                            }}\n                        />\n                        <DatePicker\n                            hintText={\"Enddatum\"}\n                            defaultDate={new Date(\"08-15-2016\")}\n                            onChange={(e, newValue) => {\n                                this.setState({end: moment(newValue).format(\"YYYY-MM-DD\")})\n                            }}\n                        />\n                        <TextField floatingLabelText={\"Anzahl der zusammenzufassenden Tage\"} onChange={(e, newValue) => {\n                            this.setConfig('timespan', newValue)\n                        }} value={this.state.ldaConfig.timespan}/>\n\n                        <RaisedButton style={{marginTop: '20px', width: '100%'}} disabled={this.state.loading}\n                                      label={this.state.loading ? 'Warte auf Antwort...' : \"Analyse starten\"}\n                                      onClick={() => {\n                                          this.startAnalysis()\n                                      }}/>\n                        <RaisedButton style={{marginTop: '20px', width: '100%'}} disabled={this.state.loading}\n                                      label={this.state.loading ? 'Warte auf Antwort...' : \"Vergleichsfall analysieren\"}\n                                      onClick={() => {\n                                          this.startSecondAnalysis()\n                                      }}/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <TextField floatingLabelText={\"Anzahl der Themen\"} onChange={(e, newValue) => {\n                            this.setConfig('numberOfTopics', newValue)\n                        }} value={this.state.ldaConfig.numberOfTopics}/>\n                        <TextField floatingLabelText={\"Dirichlet Alpha\"} onChange={(e, newValue) => {\n                            this.setConfig('dirichletAlpha', newValue)\n                        }} value={this.state.ldaConfig.dirichletAlpha}/>\n                        <TextField floatingLabelText={\"Dirichlet Eta\"} onChange={(e, newValue) => {\n                            this.setConfig('dirichletEta', newValue)\n                        }} value={this.state.ldaConfig.dirichletEta}/>\n                        <TextField floatingLabelText={\"Anzahl der Iterationen\"} onChange={(e, newValue) => {\n                            this.setConfig('numberOfIterations', newValue)\n                        }} value={this.state.ldaConfig.numberOfIterations}/>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <TextField floatingLabelText={\"Anzahl der dargestellten Top-Themen\"}\n                                   onChange={(e, newValue) => {\n                                       this.setConfig('numberOfDisplayedTopTopics', newValue)\n                                   }} value={this.state.ldaConfig.numberOfDisplayedTopTopics}/>\n                        <TextField floatingLabelText={\"Anzahl der dargestellten Top-Wörter\"}\n                                   onChange={(e, newValue) => {\n                                       this.setConfig('displayedTopicsTopWords', newValue)\n                                   }} value={this.state.ldaConfig.displayedTopicsTopWords}/>\n                        <SelectField floatingLabelText={\"Stammwortreduktion\"} onChange={(e, index, newValue) => {\n                            this.setConfig('stemming', newValue)\n                        }} value={this.state.ldaConfig.stemming}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                        <SelectField floatingLabelText={\"Stoppwortreduktion\"} onChange={(e, index, newValue) => {\n                            this.setConfig('removeStopwords', newValue)\n                        }} value={this.state.ldaConfig.removeStopwords}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <TextField floatingLabelText={\"Frequenz der zu entfernenden hoch-frequenten Wörter\"}\n                                   onChange={(e, newValue) => {\n                                       this.setConfig('removeHighFrequentWords', newValue)\n                                   }} value={this.state.ldaConfig.removeHighFrequentWords}/>\n                        <SelectField floatingLabelText={\"Groß-Kleinschreibung ignorieren\"}\n                                     onChange={(e, index, newValue) => {\n                                         this.setConfig('ignoreCapitalization', newValue)\n                                     }} value={this.state.ldaConfig.ignoreCapitalization}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                        <SelectField floatingLabelText={\"Zahlen entfernen\"} onChange={(e, index, newValue) => {\n                            this.setConfig('removeNumbers', newValue)\n                        }} value={this.state.ldaConfig.removeNumbers}>\n                            <MenuItem primaryText={\"Ja\"} value={true}/>\n                            <MenuItem primaryText={\"Nein\"} value={false}/>\n                        </SelectField>\n                        <TextField floatingLabelText={\"Minimale Wortlänge\"} onChange={(e, newValue) => {\n                            this.setConfig('minimalWordLength', newValue)\n                        }} value={this.state.ldaConfig.minimalWordLength}/>\n                    </div>\n                </div>\n                <hr/>\n                <Tabs onChange={(value) => {this.setState({selectedTab: value})}}>\n                    <Tab label={\"LDA\"} value={\"lda\"} onActive={() => {this.setState({selectedTab: 'lda'})}}>\n                        <div>\n                            {this.state.ldaResult && this.state.ldaResult.topics ? Object.keys(this.state.ldaResult.topics).map((topic) => {\n                                return (\n                                    <div>\n                                        {topic}:\n                                        <ul>\n                                            {this.state.ldaResult.topics[topic].top_words.map((word) => {\n                                                return(`${word}, `)\n                                            })}\n                                        </ul>\n                                    </div>\n                                )\n                            }) : <div/>}\n                        </div>\n                        <hr/>\n                        {/*{this.state.second ? */}\n                        <div>\n                            <div>\n                                <div id=\"lda-topic-bars\" className=\"col-xs-12 empty_on_reset\">\n\n                                </div>\n                                <div className=\"lda-topic-bar-template col-xs-12 template panel panel-default\">\n                                    <strong><span className=\"lda-topic-bar-name col-xs-12\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"></span></strong>\n                                </div>\n                            </div>\n                        <hr/>\n                            <div id=\"lda-second-topic-bars\" className=\"col-xs-12 empty_on_reset\">\n                            </div>\n                            <div className=\"lda-second-topic-bar-template col-xs-12 template panel panel-default\">\n                                <strong><span className=\"lda-second-topic-bar-name col-xs-12\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\"></span></strong>\n                            </div>\n                        </div>\n\n\n                            {/*: <div>\n                            <div id=\"lda-topic-bars\" className=\"col-xs-12 empty_on_reset\">\n\n                            </div>\n                            <div className=\"lda-topic-bar-template col-xs-12 template panel panel-default\">\n                                <strong><span className=\"lda-topic-bar-name col-xs-12\" data-toggle=\"tooltip\"\n                                              data-placement=\"top\" title=\"\"></span></strong>\n                            </div>\n                        </div>} */}\n\n                        <hr/>\n                    </Tab>\n                    <Tab label={\"Wörterbuch\"} value={\"dictionary\"} onActive={() => {this.setState({selectedTab: 'dictionary'})}}>\n                        {this.state.second ? <div>\n                                {Object.keys(this.state.dictionaryBarData).length ?\n                                        <BarChart\n                                            width={600}\n                                            height={400}\n                                            data={this.state.dictionaryBarData}\n                                            stackOffset=\"sign\"\n                                            margin={{\n                                                top: 5, right: 30, left: 20, bottom: 5,\n                                            }}\n                                        >\n                                            <CartesianGrid strokeDasharray=\"3 3\" />\n                                            <XAxis dataKey=\"name\" />\n                                            <YAxis />\n                                            <Tooltip />\n                                            <Legend />\n                                            <ReferenceLine y={0} stroke=\"#000\" />\n                                            <Bar dataKey=\"Warm\" fill=\"#8884d8\" stackId=\"stack\" />\n                                            <Bar dataKey=\"Kalt\" fill=\"#82ca9d\" stackId=\"stack\" />\n                                        </BarChart>\n                                    : <div/>}\n                            {Object.keys(this.state.secondDictionaryBarData).length ?\n                                    <BarChart\n                                        width={600}\n                                        height={400}\n                                        data={this.state.secondDictionaryBarData}\n                                        stackOffset=\"sign\"\n                                        margin={{\n                                            top: 5, right: 30, left: 20, bottom: 5,\n                                        }}\n                                    >\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\n                                        <XAxis dataKey=\"name\" />\n                                        <YAxis />\n                                        <Tooltip />\n                                        <Legend />\n                                        <ReferenceLine y={0} stroke=\"#000\" />\n                                        <Bar dataKey=\"Warm\" fill=\"#8884d8\" stackId=\"stack\" />\n                                        <Bar dataKey=\"Kalt\" fill=\"#82ca9d\" stackId=\"stack\" />\n                                    </BarChart>\n                                : <div/>}\n                        </div> : <div>\n                            {Object.keys(this.state.dictionaryBarData).length ?\n                                <div className={\"center\"}>\n                                    <BarChart\n                                        width={600}\n                                        height={400}\n                                        data={this.state.dictionaryBarData}\n                                        stackOffset=\"sign\"\n                                        margin={{\n                                            top: 5, right: 30, left: 20, bottom: 5,\n                                        }}\n                                    >\n                                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                                        <XAxis dataKey=\"name\"/>\n                                        <YAxis/>\n                                        <Tooltip/>\n                                        <Legend/>\n                                        <ReferenceLine y={0} stroke=\"#000\"/>\n                                        <Bar dataKey=\"Warm\" fill=\"#8884d8\" stackId=\"stack\"/>\n                                        <Bar dataKey=\"Kalt\" fill=\"#82ca9d\" stackId=\"stack\"/>\n                                    </BarChart>\n                                </div>\n                                : <div/>}\n                        </div>}\n\n                        <hr/>\n                    </Tab>\n                </Tabs>\n                <div className=\"row col-xs-6\">\n                    <Table>\n                        <TableHeader\n                            displaySelectAll={false}\n                            adjustForCheckbox={false}\n                            enableSelectAll={false}\n                        >\n                            <TableRow>\n                                <TableHeaderColumn style={{width: '10%'}}>ID</TableHeaderColumn>\n                                <TableHeaderColumn style={{width: '15%'}}>Start</TableHeaderColumn>\n                                <TableHeaderColumn style={{width: '15%'}}>Ende</TableHeaderColumn>\n                                <TableHeaderColumn style={{width: '60%'}}>Eintrag</TableHeaderColumn>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody\n                            displayRowCheckbox={false}\n                            deselectOnClickaway={false}\n                            showRowHover={false}\n                            stripedRows={false}\n                        >\n                            {this.state.comments.map((comment) => {\n                                return(<TableRow>\n                                    <TableRowColumn style={{width: '10%'}}>{comment.id}</TableRowColumn>\n                                    <TableRowColumn style={{width: '15%'}}>{moment(comment.start).format('DD.MM.YYYY, LT')}</TableRowColumn>\n                                    <TableRowColumn style={{width: '15%'}}>{moment(comment.stop).format('DD.MM.YYYY, LT')}</TableRowColumn>\n                                    <TableRowColumn style={{width: '60%'}}>{<span onClick={() => {alert(comment.comment)}}>{comment.comment}</span>}</TableRowColumn>\n                                </TableRow>)\n                            })}\n                        </TableBody>\n                    </Table>\n                </div>\n                <hr/>\n                <JSONTree data={this.state.ldaResult}/>\n                <hr/>\n            </div>\n        );\n    }\n}\n\nexport default MyComponent"]},"metadata":{},"sourceType":"module"}